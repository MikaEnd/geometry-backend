from core.interfaces import Skill
from core.services.llm import ask_llm
import re

class WriteFileSkill(Skill):
    def can_handle(self, message: str) -> bool:
        return "—Å–æ—Ö—Ä–∞–Ω–∏" in message.lower() or "—Ñ–∞–π–ª" in message.lower()

    async def execute(self, user_id: str, message: str) -> str:
        system_prompt = (
            "–¢—ã —Ñ–∞–π–ª–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ü–æ–ª—É—á–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è —Ñ–∞–π–ª–∞ –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ. "
            "–û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–∏–º—è —Ñ–∞–π–ª–∞>\n<—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞>. "
            "–ë–µ–∑ markdown, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ë–µ–∑ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª."
        )

        response = ask_llm(system_prompt=system_prompt, user_message=message)
        raw = response.get("text", "").strip()

        print(f"üîç –û—Ç–≤–µ—Ç –æ—Ç LLM:\n{raw}")

        if "with open(" in raw and ".write(" in raw:
            retry_prompt = (
                "–û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–∏–º—è —Ñ–∞–π–ª–∞>\n<—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞>.\n"
                "–ë–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –±–µ–∑ markdown, –±–µ–∑ –∫–æ–¥–∞, –±–µ–∑ Python. –¢–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞ –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ."
            )
            retry = ask_llm(system_prompt=retry_prompt, user_message=message)
            raw = retry.get("text", "").strip()
            print(f"üîÅ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è:\n{raw}")

        raw = re.sub(r"^```(?:[a-z]+)?\n?", "", raw.strip(), flags=re.IGNORECASE)
        raw = re.sub(r"\n?```$", "", raw.strip())

        if not raw or "\n" not in raw:
            return f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∏–º—è –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:\n{raw}"

        filename, content = raw.split("\n", 1)
        filename = filename.strip()
        content = content.strip()

        # ‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
        if not re.match(r"^[\w\-.–∞-—è–ê-–Ø—ë–Å]+(\.py|\.txt|\.sh|\.md)?$", filename, re.IGNORECASE):
            return f"üö´ –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–º—è —Ñ–∞–π–ª–∞: {filename}"

        try:
            with open(filename, "w", encoding="utf-8") as f:
                f.write(content)
            return f"üìÑ –§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω."
        except Exception as e:
            return f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞: {e}"
