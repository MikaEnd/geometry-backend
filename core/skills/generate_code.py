from core.interfaces import Skill
from core.services.llm import ask_llm

class GenerateCodeSkill(Skill):
    def can_handle(self, message: str) -> bool:
        return "–∫–æ–¥" in message or "—Å–∫—Ä–∏–ø—Ç" in message

    async def execute(self, user_id: str, message: str) -> str:
        system_prompt = (
            "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é. "
            "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π markdown, –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π ‚Äî —Ç–æ–ª—å–∫–æ –∫–æ–¥."
        )
        response = ask_llm(system_prompt=system_prompt, user_message=message)
        code = response.get("text", "").strip()

        if not code:
            return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥."
        return f"üìã –ó–∞–¥–∞—á–∞: {message}\n\nüíª –ö–æ–¥:\n{code}"
