import os
import subprocess

TESTS = [
    {
        "id": "DOCX-001",
        "description": "–°–æ–∑–¥–∞–Ω–∏–µ Word-—Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—Å—Ç–æ–º",
        "command": '—Å–æ–∑–¥–∞–π –¥–æ–∫—É–º–µ–Ω—Ç Word –ø—Ä–æ –õ—É–Ω—É —Å —Ç–µ–∫—Å—Ç–æ–º',
        "expected_file": "moon.docx"
    },
    {
        "id": "DEV-002",
        "description": "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª–∞",
        "command": '—Å–æ–∑–¥–∞–π –ø–∞–ø–∫—É hello123 –∏ –ø–æ–ª–æ–∂–∏ —Ç—É–¥–∞ —Ñ–∞–π–ª info.txt',
        "expected_file": "hello123/info.txt"
    }
]

def run_test(test):
    print(f"üß™ –¢–µ—Å—Ç {test['id']}: {test['description']}")
    process = subprocess.Popen(
        ["python3", "bot.py"],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    try:
        stdout, stderr = process.communicate(input=test['command'] + "\n", timeout=15)
    except subprocess.TimeoutExpired:
        process.kill()
        print("‚ùå Timeout")
        return False

    path = os.path.join(os.getcwd(), test["expected_file"])
    if os.path.exists(path):
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: –Ω–∞–π–¥–µ–Ω {test['expected_file']}")
        return True
    else:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {test['expected_file']}")
        return False

def main():
    passed = 0
    for test in TESTS:
        if run_test(test):
            passed += 1
    print(f"\nüèÅ –í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed}/{len(TESTS)}")

if __name__ == "__main__":
    main()
